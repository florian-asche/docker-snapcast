---
name: Build and publish the voice sattelite stable docker image

on:
  push:
    # Tags follow the format `v${UPSTREAM_VERSION}-${IMAGE_BUILD_REVISION}`
    # Example: v1.2.0-0
    tags: ["v[0-9]+.[0-9]+.[0-9]+-[0-9]+"]

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - name: Compute build arguments
        id: compute_args
        env:
          GIT_TAG: ${{ github.ref_name }}
        run: |
          UPSTREAM_TAG="${GIT_TAG%-*}"
          UPSTREAM_VERSION="${UPSTREAM_TAG#v}"
          for VAR in GIT_TAG UPSTREAM_TAG UPSTREAM_VERSION; do
            echo "${VAR}=${!VAR}" >> $GITHUB_OUTPUT
          done
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
      # Build Docker Images (amd64 and arm64)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          # E.g. tag v1.2.0 produces 3 tags: '1.2.0', '1.2', and 'latest'
          # https://github.com/docker/metadata-action?tab=readme-ov-file#semver
          tags: |
            type=semver,pattern={{version}}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: .
          platforms: linux/amd64,linux/aarch64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            DEBIAN_VERSION=bookworm
            SNAPCAST_VERSION=${{ steps.compute_args.outputs.GIT_TAG }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.repository }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
...
